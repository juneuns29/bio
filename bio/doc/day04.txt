내장 객체
==> 자주 사용하는 클래스 중
	몇가지는 JSP 안에서 미리 new 시켜놓고
	바로 사용할 수 있도록 준비해 놓은 것들이 있다.
	따라서 이런 것들은 new 시킬 필요없이 
	필요할 때 바로 사용할 수 있는 클래스를 내장 객체라 한다.
	
	1. out 객체
		==> PrintWriter 클래스를 미리 new 시켜놓은 내장 객체
		
			즉,
				PrintWriter out = new PrintWriter(????);
				
			이 클래스의 역할은 클라이언트에게 응답하는 문서를 작성하도록 하는 기능이다.
			<%= %> 와 동일한 기능
			
			주요함수 ]
				write()
				flush()
				
			PrintWriter는 JSPWriter 클래스로 변화되어서 new 된 경우이다.
			
참고 ]
	내장 객체는 결국 자바 클래스를 사용하는 것이다.
	그 클래스 안에 원하는 함수가 무엇이 있는지를 파악하는 것이 중요하다.
	
	*
	2. resquest 객체
		
		==> 클라이언트의 요청 정보를 관리하는 역할을 하는 내장 객체
			
			즉, 요청한 클라이언트의 IP주소, 요청내용,  부가정보 등을 알고 싶은 경우 사용하는 내장객체이다.
			
			이 객체는 
				HttpServletRequest 클래스를 이용해서 만들어진 내장객체
				
			주요함수
				
				getParameter()
				==> 서버측에서 클라이언트가 보내준 부가정보를 알아내는 함수
				
					형식 ]
						String ??? = request.getParameter("키값");
						
						참고 ]
							파라미터는 오직 "문자열"로만 꺼낼 수 있다.
				
				getParameterValues()
				==> checkBox 의 경우 동일한 name속성값으로 여러개의 데이터를 선택할 수 있고
					선택된 여러개가 동일한 name 속성값으로 서버에 전달 될 것이기 때문에
					서버에서는 해당 키값으로 데이터를 모두 꺼내려고 하면
					배열의 형태로 꺼내야 할 것이다.
					이때 사용하는 함수....
					
					형식 ]
						
						String[] ??? = request.getParameterValues("키값");
					 
		참고 ]
			클라이언트가 서버에게 요청하는 방법
				
				1. GET 방식
					==> 
						1) 주소표시줄에 직접 입력해서 요청하는 방법
						2) <a> 태그를 이용해서 요청하는 방법
							<a href="??????">.....</a>
							
						3) 자바스크립트에서
								location.href = '?????';
							로 요청하는 방법
							
							==> 데이터를 첨부해서 요청하는 방법
								
								"요청주소?키값=데이터&키값=데이터&키값=데이터...."
							
						4) form 태그를 이용하는 방법
							
							<form method="GET" action="????">
								<input ......
							</form>
							
					참고 ]
						부가정보에 한글이 포함된 경우 서버측에서 받을 수 없는 경우가 생길 수 있다.
						
						해결방법 ]
							
							1. 그 문서에서만 해결하는 방법
								해당 문서에서
									
									<%
										 request.setCharacterEncoding("UTF-8");
									%>
									
							2. 모든 문서의 내용을 해결하는 방법
								server.xml 에서
								<Connector 태그의 속성에
									URIEncoding="UTF-8"
								을 추가해준다.
						
				2. POST 방식
					==> 
						1. form 태그를 이용해서 요청하는 방법
							==> 로그인 폼 처럼
								사용자가 필요한 내용을 입력 또는 선택하고
								서버에게 전달하는 방식
								
							***
							특징 ]
							
									반드시 form 태그안에 입력태그를 만들어야 한다.
									만약 어떤 내용이 form 안에 작성되지 않으면
									화면에는 표현될 수 있으나
									서버에 전달은 안된다.
									
							***
							중요 ]
								서버에 전달되는 데이터는
								입력 태그의 name 속성값을 키값으로 하고
								입력 내용을 데이터로 해서 한 쌍으로 서버에 전달이 된다.
								따라서 
								반드시 입력 태그를 만들면 name 속성값은 필수적으로 만들어줘야 한다.
								
								
							***
							참고 ]
								반드시 폼의 내용을 전달할 도구를 준비해야 한다.
								이 도구를 우리는 submit 도구라 부른다.
								
								제출도구 만드는 방법 ]
									
									1) 
										<input type="submit" value="로그인">
										<button type="submit">로그인</button>
										
									2) 
										javascript 에서 만드는 방법
											<script  type="text/javascript">
												var f = 제출할 폼태그 선택
												
												f.submit();
											</script>
											
											
				참고 ]
					
					form 태그의 중요속성
						1. method
							==> 서버에 데이터 전송하는 방식을 기술하는 속성으로
								GET, POST 둘중 하나를 기술하면 된다.
								
								예 ]
									<form method="GET"></form>
									
									<form method="POST"></form>
						2. action
							==> 서버에게 요청할 문서 이름을 기술하는 속성
							
						3. name
							==> 서버에 전달될 데이터의 키값으로 이용되는 속성
								따라서 반드시 기술해줘야 한다.
								
						[4. id ]
							==> JavaScript 에서 해당 태그를 선택할 목적으로 입력하는 속성
							
			참고 ]
				POST 방식으로 전달되는 데이터의 한글 깨짐 방지 처리
					
					1. web.xml 파일을 연다.
					
					2. 
						  <!-- A filter that sets character encoding that is used to decode -->
						  <!-- parameters in a POST request -->
						
						    <filter>
						        <filter-name>setCharacterEncodingFilter</filter-name>
						        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
						        <init-param>
						            <param-name>encoding</param-name>
						            <param-value>UTF-8</param-value>
						        </init-param>
						        <!-- <async-supported>true</async-supported> -->
						    </filter>
						
						
						
							<!-- The mapping for the Set Character Encoding Filter -->

						    <filter-mapping>
						        <filter-name>setCharacterEncodingFilter</filter-name>
						        <url-pattern>/*</url-pattern>
						    </filter-mapping>
													
						부분을 찾아서 위처럼 수정한다.
						
						
			참고 ]
				name 속성값이 동일한 태그가 여러개 있는 경우
				그 태그들이 서버에 전달이 되면
				배열형태로 서버에서 꺼내게 된다.
				
					String[] arr = request.getParameterValues("키값");
					
			참고 ]
				radio 버튼이나 select 태그의 경우는 선택된 태그만 전달이 된다.
				
--------------------------------------------------------------------------------------------------
						
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				